<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ansible tips and tricks on Pavel Derendyaev notes</title>
    <link>https://dddpaul.github.io/blog/series/ansible-tips-and-tricks/</link>
    <description>Recent content in Ansible tips and tricks on Pavel Derendyaev notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Nov 2015 10:45:00 +0300</lastBuildDate><atom:link href="https://dddpaul.github.io/blog/series/ansible-tips-and-tricks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ansible: &#34;default&#34; and &#34;bool&#34; filters</title>
      <link>https://dddpaul.github.io/blog/2015/11/30/ansible-default-and-bool-filters/</link>
      <pubDate>Mon, 30 Nov 2015 10:45:00 +0300</pubDate>
      
      <guid>https://dddpaul.github.io/blog/2015/11/30/ansible-default-and-bool-filters/</guid>
      <description>There are plenty of bool and default filters usage in Ansible playbooks and templates. For example, in debops/ansible-docker: when: docker_upstream| d() | bool.
Where docker_upstream is an YAML boolean: docker_upstream: False. It seems like &amp;ldquo;when&amp;rdquo; condition is overbloated again :)
The var | d() | bool construction is spread all over the place, for example, in docker config template:
{% if docker_listen | d() | bool %} Where docker_listen is an YAML list: docker_listen: [ &#39;{{ docker_tcp_listen }}&#39; ].</description>
    </item>
    
    <item>
      <title>Ansible: &#34;defined&#34; keyword</title>
      <link>https://dddpaul.github.io/blog/2015/11/29/ansible-defined-keyword/</link>
      <pubDate>Sun, 29 Nov 2015 10:45:00 +0300</pubDate>
      
      <guid>https://dddpaul.github.io/blog/2015/11/29/ansible-defined-keyword/</guid>
      <description>Some hidden knowledge for the start:
First of all, the Ansible when clause contains a Jinja2 expression (see Ansible playbook conditionals). It&amp;rsquo;s confirmed with a quote from Ansible: Up And Running, page 41:
 Ansible also uses the Jinja2 template engine to evaluate variables in playbooks.
 Secondly, that how Jinja2 interprets the if condition:
 The if statement in Jinja is comparable with the Python if statement. In the simplest form, you can use it to test if a variable is defined, not empty or not false.</description>
    </item>
    
  </channel>
</rss>
