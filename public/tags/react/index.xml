<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Dev notes</title>
    <link>https://dddpaul.github.io/blog/tags/react/</link>
    <description>Recent content in React on Dev notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Apr 2016 13:00:00 +0300</lastBuildDate>
    <atom:link href="https://dddpaul.github.io/blog/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Быстрое погружение в React</title>
      <link>https://dddpaul.github.io/blog/2016/04/15/react-for-starters/</link>
      <pubDate>Fri, 15 Apr 2016 13:00:00 +0300</pubDate>
      
      <guid>https://dddpaul.github.io/blog/2016/04/15/react-for-starters/</guid>
      <description>&lt;p&gt;Для разогрева:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://facebook.github.io/react/docs/tutorial.html&#34;&gt;React tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ru.hexlet.io/courses/reactjs&#34;&gt;Курс на Хекслете&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;После этого более-менее должно оформиться понимание, что:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React - это V в MVC;&lt;/li&gt;
&lt;li&gt;основа React - это компоненты;&lt;/li&gt;
&lt;li&gt;у компонента есть главный метод render(), который дергается React&amp;rsquo;ом, когда нужно отобразить или перерисовать компонент;&lt;/li&gt;
&lt;li&gt;компоненты инициализируется через properties, и хранят state;&lt;/li&gt;
&lt;li&gt;компоненты пишутся на JSX - специальный синтаксис, который &amp;ldquo;бесшовно&amp;rdquo; внедряет HTML в JS;&lt;/li&gt;
&lt;li&gt;компоненты можно связывать в иерархические структуры;&lt;/li&gt;
&lt;li&gt;состояние нельзя менять напрямую, а только через специальный метод setState() - таким образом React точно узнает, что состояние изменилось и объект надо перерисовать;&lt;/li&gt;
&lt;li&gt;состояние принято хранить в родительском компоненте, и передавать его в дочерние компоненты через properties.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Далее надо слегка погрузиться в ECMAScript 6 aka ES2015:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.javascript.ru/es-modern-usage&#34;&gt;ES-2015 сейчас&lt;/a&gt; - введение&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://babeljs.io/docs/learn-es2015/&#34;&gt;Learn ES2015&lt;/a&gt; - кратенько про отличия от ES5&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.2ality.com/2012/07/esnext-classes.html&#34;&gt;ECMAScript 6: classes&lt;/a&gt; - новый синтаксис классов&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.2ality.com/2012/04/arrow-functions.html&#34;&gt;ECMAScript 6: arrow functions and method definitions&lt;/a&gt; - лямбды!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.benmvp.com/learning-es6-enhanced-object-literals/&#34;&gt;Learning ES6: Enhanced object literals&lt;/a&gt; - less boilerplate in objects&lt;/li&gt;
&lt;li&gt;(React на ES6+)[&lt;a href=&#34;https://habrahabr.ru/post/262183/&#34;&gt;https://habrahabr.ru/post/262183/&lt;/a&gt;] - кратко обо всем, пока не читал&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Теперь рекомендую форкнуть &lt;a href=&#34;https://github.com/reactjs/react-tutorial&#34;&gt;React tutorial&lt;/a&gt; и поиграться с ним, например:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;перевести проект на Webpack для дальнейшей работы с модулями, см. &lt;a href=&#34;https://www.twilio.com/blog/2015/08/setting-up-react-for-es6-with-webpack-and-babel-2.html&#34;&gt;Setting up React for ES6 with Webpack and Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;подключить live and &lt;a href=&#34;http://gaearon.github.io/react-hot-loader/getstarted/&#34;&gt;hot reload&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;заменить &amp;ldquo;var&amp;rdquo; на &amp;ldquo;let/const&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;заменить определения методов внутри объектов (Enhanced object literals);&lt;/li&gt;
&lt;li&gt;заменить потенциально опасные манипуляции со сложным стейтом (объекты, массивы) с помощью &lt;a href=&#34;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&#34;&gt;Array.prototype.splice()&lt;/a&gt; или &lt;a href=&#34;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&#34;&gt;Array.prototype.concat()&lt;/a&gt; на изменения с помощью идеологически верных &lt;a href=&#34;https://facebook.github.io/react/docs/update.html&#34;&gt;Immutability Helpers&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;заменить XHR-вызовы через jQuery на что-то более REST&amp;rsquo;овое, например &lt;a href=&#34;https://github.com/github/fetch&#34;&gt;fetch API&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Кракая выжимка для начала работы с Webpack:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install --save react
npm install --save react-dom
npm install --save-dev webpack
npm install --save-dev babel-loader
npm install --save-dev babel-core
npm install --save-dev babel-preset-es2015
npm install --save-dev babel-preset-react
npm install --save-dev react-hot-loader
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для запуска webpack-dev-server надо запустить в $HOME:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install webpack-dev-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В этом случае webpack-dev-server будет установлен в $HOME/node_modules, и симлинк на него будет в $HOME/node_modules/.bin. Этот каталог уже можно включить в $PATH и запускать webpack и webpack-dev-server из любого места.&lt;/p&gt;

&lt;p&gt;Типовое содержимое webpack.config.js:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;webpack&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;webpack&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./public/scripts/example.js&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;__dirname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;/public/build&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bundle.js&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;loaders&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/.jsx?$/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;loaders&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;react-hot&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;babel-loader?presets[]=react,presets[]=es2015&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;exclude&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/node_modules/&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;webpack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HotModuleReplacementPlugin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;webpack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NoErrorsPlugin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// don&amp;#39;t reload if there is an error&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь можно запустить &lt;code&gt;webpack -w&lt;/code&gt; и, при любых изменениях js-файлов, будет автоматически пересобираться bundle.js. Reload в браузере все-таки придется сделать. Полноценный hot&amp;amp;live reload можно организовать только с помощью webpack-dev-server.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Про модули:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://frontender.info/es6-modules/&#34;&gt;Модули в ECMAScript 6: будущее уже сейчас&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.2ality.com/2015/12/babel-commonjs.html&#34;&gt;Babel and CommonJS modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://frontender.info/packing-the-web-like-a-boss/&#34;&gt;Пакуем как боги&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://habrahabr.ru/post/250103/&#34;&gt;Как мы готовим React, Require и Backbone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@rajaraodv/webpack-the-confusing-parts-58712f8fcad9#.7ffl30blv&#34;&gt;Webpack — The Confusing Parts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Про компоненты:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://facebook.github.io/react/docs/reusable-components.html&#34;&gt;Reusable Components&lt;/a&gt; - пока не читал&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Внедрение &lt;a href=&#34;https://github.com/github/fetch&#34;&gt;fetch API&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install --save whatwg-fetch
npm install --save imports-loader exports-loader
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Остальные ссылки по fetch:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://davidwalsh.name/fetch&#34;&gt;fetch API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://habrahabr.ru/post/252941/&#34;&gt;Введение в fetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hacks.mozilla.org/2015/03/this-api-is-so-fetching/&#34;&gt;This API is so Fetching!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mts.io/2015/04/08/webpack-shims-polyfills/&#34;&gt;Using webpack with shims and polyfills&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Переходим к тяжелым упражнениям:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://spring.io/guides/tutorials/react-and-spring-data-rest/&#34;&gt;React.js and Spring Data REST&lt;/a&gt; - мегаматериал про связку со Spring Boot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Чтобы не ставить nodejs, npm и bower локально, можно использовать:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/eirslett/frontend-maven-plugin&#34;&gt;Frontend maven plugin&lt;/a&gt; - для проектов на Java&lt;/li&gt;
&lt;li&gt;Docker-образ &lt;a href=&#34;https://github.com/DigitallySeamless/docker-nodejs-bower-grunt&#34;&gt;Node.js w/ Bower &amp;amp; Grunt&lt;/a&gt; - для всего остального&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Но проще всего установить nodejs &amp;amp; npm с &lt;a href=&#34;https://nodejs.org&#34;&gt;https://nodejs.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Дополнительные компоненты:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://react-bootstrap.github.io/&#34;&gt;React-Bootstrap&lt;/a&gt; - Bootstrap-компоненты, переписанные на React&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AllenFang/react-bootstrap-table&#34;&gt;react-bootstrap-table&lt;/a&gt; - крутая Bootstrap-compartible табличка&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Тестирование:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://facebook.github.io/react/docs/test-utils.html&#34;&gt;ReactTestUtils&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Просто интересные ресурсы:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://geowarin.github.io/spring-boot-and-react-hot.html&#34;&gt;Spring Boot and React hot loader&lt;/a&gt; - пока не читал&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.risingstack.com/the-react-way-getting-started-tutorial/&#34;&gt;The React.js Way: Getting Started Tutorial&lt;/a&gt; - пока не читал&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/winterbe/spring-react-example&#34;&gt;Spring Boot React Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>