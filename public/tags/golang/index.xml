<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Dev notes</title>
    <link>http://dddpaul.github.io/blog/tags/golang/</link>
    <description>Recent content in Golang on Dev notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Nov 2014 16:04:00 +0000</lastBuildDate>
    <atom:link href="http://dddpaul.github.io/blog/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Дистанционное управление Motion с помощью Go</title>
      <link>http://dddpaul.github.io/blog/2014/11/14/motion-remote-control/</link>
      <pubDate>Fri, 14 Nov 2014 16:04:00 +0000</pubDate>
      
      <guid>http://dddpaul.github.io/blog/2014/11/14/motion-remote-control/</guid>
      <description>&lt;p&gt;Цель — сделать удобное управление для сервачка с системой motion detection.  В качестве сервера пригодился классический нетбук Asus Eee PC 701 4-х гигабайтным SSD на борту. На него была установлена Ubuntu 14.04.&lt;/p&gt;

&lt;p&gt;Задачи:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Собственно, motion detection (для этого был использован &lt;a href=&#34;http://www.lavrsen.dk/foswiki/bin/view/Motion/WebHome&#34;&gt;Motion&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Управление настройками Motion через ИК-пульт.&lt;/li&gt;
&lt;li&gt;Вывод всех сообщений от Motion и сигналов от пульта на консоль (&lt;em&gt;/dev/tty1&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Минимальное время работы экрана (быстрый переход в энергосберегающйй режим, просыпание по сигналу от пульта).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Motion ставится элементарно — &lt;code&gt;apt-get install motion&lt;/code&gt;. Важные настройки:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;максимальный-fps:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Максимальный fps&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;framerate 5&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;снимать-на-максимальном-fps-только-во-время-движения:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Снимать на максимальном fps только во время движения&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;webcam_motion on&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;выкрутил-в-максимум-чтобы-избежать-срабатывания-на-включение-света:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Выкрутил в максимум, чтобы избежать срабатывания на включение света&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;lightswitch 100&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;кол-во-кадров-с-движением-необходимых-для-генерации-события:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Кол-во кадров с движением, необходимых для генерации события&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;minimum_motion_frames 3&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;записать-кадры-до-движения:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Записать кадры до движения&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;pre_capture 5&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;записать-кадры-после-движения:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Записать кадры после движения&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;post_capture 5&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;маска-для-определения-области-детекции-легко-делается-в-gimp-е-из-снимка-с-камеры:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Маска для определения области детекции, легко делается в Gimp’е из снимка с камеры.&amp;lt;/h1&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;области-закрашенные-черным-игнорируются:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Области, закрашенные черным, игнорируются.&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;mask_file /path/to/mask.pgm&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;время-определения-окончания-движения-если-за-15-секунд-после-начала-движения:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Время определения окончания движения &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;если за &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; секунд после начала движения&amp;lt;/h1&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;не-было-никаких-поползновений-то-считаем-что-событие-движение-закончилось:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;не было никаких поползновений, то считаем, что событие-движение закончилось&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;gap 15&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;отключить-создание-снимков:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Отключить создание снимков&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;output_normal off&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;обозначать-движение-прямоугольником:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Обозначать движение прямоугольником&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;locate on&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;запуск-скрипта-по-началу-движения-это-симлимк-который-указывает-на-реальный-скрипт:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Запуск скрипта по началу движения &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;это симлимк, который указывает на реальный скрипт&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.&amp;lt;/h1&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;изменение-симлинка-осущестляется-по-команде-с-пульта-см-п-2-про-конфиг:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Изменение симлинка осущестляется по команде с пульта &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;см. п. &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; про конфиг&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;on_event_start “/etc/motion/handlers/on_event_start”&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Для подгонки чувствительности, порога шумов и т.д., нужно использовать setup mode, который активируется при запуске &lt;code&gt;
motion -s&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;При этом в mjpeg-трансляции область детекции будет обозначена черным, шумы — серым, а распознанное движение — синим.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Для управления нетбуком был использован &lt;a href=&#34;http://www.dx.com/p/multimedia-ir-remote-controller-with-usb-receiver-for-pc-1-cr2025-26368#.VGYO33WUe24&#34;&gt;ИК-пульт с USB-приемником&lt;/a&gt;. Подобные пульты есть и на aliexpress, и ebay. USB-приемник эмулирует HID-устройство, по сути — обычную клавиатуру.&lt;/p&gt;

&lt;p&gt;Для работы с символьными устройствами ввода в Linux есть подсистема &lt;a href=&#34;http://en.wikipedia.org/wiki/Evdev&#34;&gt;evdev&lt;/a&gt;. Потестить распознавание сигналов с пульта можно с помощью утилиты &lt;a href=&#34;http://manpages.ubuntu.com/manpages/trusty/man1/evtest.1.html&#34;&gt;evtest&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;На гитхабе нашелся &lt;a href=&#34;https://github.com/gvalkov/golang-evdev&#34;&gt;пакет для работы с evdev на Go&lt;/a&gt;. Проект больше не поддерживается, так что я отфоркался от &lt;a href=&#34;https://github.com/ungerik/golang-evdev&#34;&gt;более свежего форка&lt;/a&gt; и сделал rebase на ядро Ubuntu 14.04 (3.13.0-39-generic на данный момент):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd evdev
make ecodes.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Поверх golang-evdev я написал &lt;a href=&#34;https://github.com/dddpaul/go-evhandler&#34;&gt;evhandler&lt;/a&gt;. Эта программа запускается от root&amp;rsquo;а и слушает события от input device, указанного в конфиге (как правило, &lt;em&gt;/etc/evhandler.toml&lt;/em&gt;).  Мой конфиг:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[params]
    device = &amp;quot;/dev/input/event9&amp;quot;

[actions]
    KEY_STOPCD = &amp;quot;service motion stop&amp;quot;
    KEY_PLAYPAUSE = &amp;quot;service motion start&amp;quot;
    KEY_PAGEUP = &amp;quot;/etc/motion/handlers/handler-select up&amp;quot;
    KEY_PAGEDOWN = &amp;quot;/etc/motion/handlers/handler-select down&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В разделе &lt;em&gt;actions&lt;/em&gt; на кнопки пульта вешаются команды: остановка и запуск motion, и выбор скрипта, который будет запущен при детекции движения. Скрипт &lt;em&gt;handler-select&lt;/em&gt; &amp;ldquo;передвигает&amp;rdquo; симлинк &lt;em&gt;on_event_start&lt;/em&gt; вверх/вниз, устанавливая, таким образом, реальный скрипт, который будет запускаться. Коллекцию этих скриптов я выложил в &lt;a href=&#34;https://github.com/dddpaul/motion-handlers&#34;&gt;отдельный проект&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Для чтения и парсинга конфигов я использовал пакет &lt;a href=&#34;http://spf13.com/project/viper&#34;&gt;Viper&lt;/a&gt;. Это очень классная либа от автора &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, которая умеет:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;парсить YAML, TOML и JSON;&lt;/li&gt;
&lt;li&gt;искать конфиги в разных местах (например, сначала в $HOME, а потом в &lt;em&gt;/etc&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;устанавливать значение по-умолчанию и переопределять значения из конфига значениями из CLI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; evhandler должен использовать в качестве стандартного вывода &lt;em&gt;/dev/tty1&lt;/em&gt;. Сделать это очень просто.&lt;/p&gt;

&lt;p&gt;Сначала отключим ввод с &lt;em&gt;/dev/tty1&lt;/em&gt; — &lt;code&gt;rm /etc/init/tty1.conf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;И создадим новый upstart job в &lt;em&gt;/etc/init/evhandler.conf&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;evhandler-simple-key-press-listener-and-handler-written-in-go:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;evhandler - Simple key press listener and handler written in Go&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;start on runlevel &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;2345&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
stop on runlevel &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;!2345&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;respawn&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;exec /path/to/go-evhandler &amp;gt; /dev/tty1 2&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;1&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Теперь evhandler будет запускаться при загрузке, а также перезапускаться, если его процесс будет прибит. Для ручного запуска — &lt;code&gt;
start evhandler&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Управлять включением энергосберегающего режима (а именно, гашением экрана) можно з-мя способами:&lt;/li&gt;
&lt;li&gt;указать &lt;code&gt;consoleblank=sss&lt;/code&gt; (где sss - секунды) в параметрах ядра (&lt;em&gt;GRUB_CMDLINE_LINUX&lt;/em&gt; в &lt;em&gt;/etc/default/grub&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;использовать команду &lt;code&gt;setterm -blank mm&lt;/code&gt; (где mm - минуты), для включения — &lt;code&gt;setterm -blank poke&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;использовать специальные ESC-последовательности в команде &lt;code&gt;echo&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;consoleblank&lt;/code&gt; давал странный эффект - после загрузки системы экран становился пустым, но было видно, что подсветка работает. При нажатии клавиш он загорался и полностью погасал через заданное время.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;setterm&lt;/code&gt; через ssh у меня как-то не заработал.&lt;/p&gt;

&lt;p&gt;И только управляющая ESC-последовательность для терминала подошла отлично — &lt;code&gt;echo -e &#39;\033[9;X]&lt;/code&gt; (где X - минуты).&lt;/p&gt;

&lt;p&gt;Для автоматического запуска этой команды создадим job &lt;em&gt;/etc/init/tty1.conf&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;tty1-getty:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;tty1 - getty&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;#&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;this-service-is-used-to-maintain-a-getty-on-tty1-from-the-point-the-system-is:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;This service is used to maintain a getty on tty1 from the point the system is&amp;lt;/h1&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;started-until-it-is-shut-down-again:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;started &lt;span class=&#34;k&#34;&gt;until&lt;/span&gt; it is shut down again.&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;start on stopped rc &lt;span class=&#34;nv&#34;&gt;RUNLEVEL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[&lt;/span&gt;2345&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; and &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
            not-container or
            container &lt;span class=&#34;nv&#34;&gt;CONTAINER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;lxc or
            container &lt;span class=&#34;nv&#34;&gt;CONTAINER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;lxc-libvirt&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;stop on runlevel &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;!2345&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;lt;/p&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;blank-screen-after-1-minute-timeout:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;Blank screen after &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; minute timeout&amp;lt;/h1&amp;gt;

&amp;lt;h1 &lt;span class=&#34;nv&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;see-http-www-armadeus-com-wiki-index-php-title-framebuffer:dd5d68c20919ac64bfba0b5fb31117b8&amp;quot;&lt;/span&gt;&amp;gt;See &amp;lt;a &lt;span class=&#34;nv&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;http://www.armadeus.com/wiki/index.php?title=FrameBuffer&amp;quot;&lt;/span&gt;&amp;gt;http://www.armadeus.com/wiki/index.php?title&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;FrameBuffer&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;exec &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -ne “&lt;span class=&#34;se&#34;&gt;\0&lt;/span&gt;33&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;9&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;” &amp;gt; /dev/tty1&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Ссылки:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dddpaul/go-evhandler&#34;&gt;Evhandler : Simple key press listener and handler written in Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spf13.com/project/viper&#34;&gt;Viper : Go Configuration Management With Fangs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://superuser.com/a/154388&#34;&gt;Change Linux console screen blanking behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://raspberrypi.stackexchange.com/questions/10374/wake-console-screen-with-ssh&#34;&gt;Wake console screen with SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.armadeus.com/wiki/index.php?title=FrameBuffer&#34;&gt;ArmadeusWiki - Framebuffer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>First note</title>
      <link>http://dddpaul.github.io/blog/2014/07/28/oldest/</link>
      <pubDate>Mon, 28 Jul 2014 12:00:00 +0000</pubDate>
      
      <guid>http://dddpaul.github.io/blog/2014/07/28/oldest/</guid>
      <description>&lt;p&gt;This blog is based on &lt;a href=&#34;http://hugo.spf13.com/&#34;&gt;Hugo&lt;/a&gt; - static site generator written on Go. GitHub interaction is organized with use of &lt;a href=&#34;http://hugo.spf13.com/tutorials/github_pages_blog&#34;&gt;Hosting on GitHub Pages&lt;/a&gt; tutorial. See &amp;ldquo;Configure git Workflow&amp;rdquo; section specifically.&lt;/p&gt;

&lt;p&gt;And for all of the git 1.7.x (and older) users - you can grab &lt;em&gt;git-subtree&lt;/em&gt; from &lt;em&gt;contrib&lt;/em&gt; directory of &lt;a href=&#34;https://github.com/git/git&#34;&gt;Git repo&lt;/a&gt;. I&amp;rsquo;ve used &lt;em&gt;git-subtree&lt;/em&gt; from latest 1.8.x. It&amp;rsquo;s just a shell script, run &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;chmod +x git-subtree&lt;/code&gt; and copy it to &lt;em&gt;/usr/lib/git-core&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>